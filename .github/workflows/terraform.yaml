---
on:
  push:
  issue_comment:
  pull_request:
  pull_request_review:
  pull_request_review_comment:

jobs:

  dump_context:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"

  plan:
    runs-on: ubuntu-latest
    name: Terraform Plan or Apply
    steps:

      - name: Echo github obj
        run: echo ${{ toJson(github) }}
        continue-on-error: true

      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.25
      
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform Plan
        continue-on-error: true
        if: github.event_name == 'issue_comment' && contains(github.event.comment.body, 'terraform plan')
        id: plan
        run: terraform plan -no-color -out plan.out

      - name: 'Upload Artifact'
        continue-on-error: true
        if: github.event_name == 'issue_comment' && contains(github.event.comment.body, 'terraform plan')
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan-artifact
          path: plan.out
          retention-days: 5

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'issue_comment' && contains(github.event.comment.body, 'terraform plan')
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # why this action?
      # see https://github.com/actions/toolkit/issues/501
      - name: Download a single artifact
        if: github.event_name == 'issue_comment' && contains(github.event.comment.body, 'terraform apply')
        uses: dawidd6/action-download-artifact@v2
        with:
          name: terraform-plan-artifact
          # Optional, GitHub token
          github_token: ${{secrets.GITHUB_TOKEN}}
          # Required, workflow file name or ID
          workflow: terraform.yaml
          # Optional, the status or conclusion of a completed workflow to search for
          # Can be one of a workflow conculsion::
          # "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Or a workflow status:
          # "completed", "in_progress", "queued"
          # Default: "completed"
          workflow_conclusion: success
          # Optional, will get head commit SHA
          pr: ${{github.event.pull_request.number}}
      
      - name: Terraform Apply
        id: apply
        if: github.event_name == 'issue_comment' && contains(github.event.comment.body, 'terraform apply')
        run: terraform apply

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'issue_comment' && contains(github.event.comment.body, 'terraform apply')
        env:
          apply: "terraform\n${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform apply üìñ\`${{ steps.apply.outcome }}\`

            <details><summary>Show apply</summary>

            \`\`\`${process.env.apply}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

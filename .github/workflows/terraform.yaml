---
on:
  push:
  issue_comment:
  pull_request:
  pull_request_review:
  pull_request_review_comment:

jobs:

  plan:
    runs-on: ubuntu-latest
    name: Terraform Plan
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}

    steps:

      - name: Echo github obj
        run: echo ${{ toJson(github) }}
        continue-on-error: true

      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.25
      
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: test/plan.out
          retention-days: 5

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `
            #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    # if: github.event
    steps:

      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.25

      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
      
      - run: |
          cd test
          terraform init
          echo 'brrrrrahhhht!'
          mv my-artifact plan.out
          terraform apply "plan.out"